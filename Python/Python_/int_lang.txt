Python
Python is an interpreted, high-level, general-purpose programming language.It is dynamically typed and garbage-collected.
It is an interpreted language and not a compiled one, although compilation is a step. Python code, written in .py file is first compiled to what is called bytecode which is stored with a .pyc or .pyo format and the machine code is then executed by the CPU to return the output.
**This bytecode is a low-level set of instructions that can be executed by an interpreter.
N.B: To convert python code, it uses intermediate byte code which is then converted to executable binary file .exe.

Java
Java source code is complied into intermediate representation called bytecode it uses java virtual machine byte code which is a platform independent which means it can be ran in different operating systems It is then interpreted by an interpretor which is  part of java virtual machine (jvm) and executed using JVM.

C 
The C programming language is what is referred to as a compiled language. In other words, C programs are implemented by compilers, which translate source code into machine-readable code.Compilers translate source code through a four-step process — preprocessing, compiling, assembly and linking.
This is the high-level overview of how it works:
* Lexing — Break up the text of the program into “tokens”.
* Parsing — Transform those sequence of tokens into a parse tree.
* Optimization — Evaluate constant expressions, optimize away unused variables or unreachable code, etc.
* Translation — Translate the parse tree into machine language.
So this compilation process takes some time depending on the compilers and the works they perform.

